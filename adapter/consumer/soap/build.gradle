configurations {
    jaxb
}
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/wsdl_chat_vo.wsdl"
//    ext.schema = "http://localhost:8080/ws/countries.wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema,
                    package: "vtb.app.adapter.soap.wsdl"
            ) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':service')


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation ('org.springframework.boot:spring-boot-starter-web-services') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.ws:spring-ws-core'
    implementation 'org.glassfish.jaxb:jaxb-runtime'
    compile(files(genJaxb.classesDir).builtBy(genJaxb))

    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'

    testCompile group: 'ru.lanwen.wiremock', name: 'wiremock-junit5', version: '1.3.1'
    testImplementation  'com.github.tomakehurst:wiremock:2.27.2@pom'
    testImplementation  'com.github.tomakehurst:wiremock:2.27.2@jar'
    testImplementation  'com.google.guava:guava:30.0-jre'
    testCompile group: 'org.xmlunit', name: 'xmlunit-core', version: '2.8.0'
    testCompile group: 'org.xmlunit', name: 'xmlunit-legacy', version: '2.8.0'
    testCompile group: 'org.xmlunit', name: 'xmlunit-placeholders', version: '2.8.0'
    testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    testCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

}

test {
    useJUnitPlatform()
    systemProperty 'de.adesso.junitinsights.enabled', 'true'
}
